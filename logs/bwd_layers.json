Model resnet50 created, param count:25557032
Data processing configuration for current model + dataset:
	input_size: (3, 160, 160)
	interpolation: bicubic
	mean: (0.485, 0.456, 0.406)
	std: (0.229, 0.224, 0.225)
	crop_pct: 0.95
AMP not enabled. Training in float32.
Scheduled epochs: 100
Linear(in_features=2048, out_features=1000, bias=True)
    input: 1 torch.Size([128, 2048])
    output: 1 torch.Size([128, 1000])
AdaptiveAvgPool2d(output_size=1)
    input: 1 torch.Size([128, 2048, 5, 5])
    output: 1 torch.Size([128, 2048, 1, 1])
ReLU()
    input: 1 torch.Size([128, 2048, 5, 5])
    output: 1 torch.Size([128, 2048, 5, 5])
BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 2048, 5, 5])
    output: 1 torch.Size([128, 2048, 5, 5])
Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 512, 5, 5])
    output: 1 torch.Size([128, 2048, 5, 5])
ReLU()
    input: 1 torch.Size([128, 512, 5, 5])
    output: 1 torch.Size([128, 512, 5, 5])
BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 512, 5, 5])
    output: 1 torch.Size([128, 512, 5, 5])
Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    input: 1 torch.Size([128, 512, 5, 5])
    output: 1 torch.Size([128, 512, 5, 5])
ReLU()
    input: 1 torch.Size([128, 512, 5, 5])
    output: 1 torch.Size([128, 512, 5, 5])
BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 512, 5, 5])
    output: 1 torch.Size([128, 512, 5, 5])
Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 2048, 5, 5])
    output: 1 torch.Size([128, 512, 5, 5])
ReLU()
    input: 1 torch.Size([128, 2048, 5, 5])
    output: 1 torch.Size([128, 2048, 5, 5])
BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 2048, 5, 5])
    output: 1 torch.Size([128, 2048, 5, 5])
Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 512, 5, 5])
    output: 1 torch.Size([128, 2048, 5, 5])
ReLU()
    input: 1 torch.Size([128, 512, 5, 5])
    output: 1 torch.Size([128, 512, 5, 5])
BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 512, 5, 5])
    output: 1 torch.Size([128, 512, 5, 5])
Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    input: 1 torch.Size([128, 512, 5, 5])
    output: 1 torch.Size([128, 512, 5, 5])
ReLU()
    input: 1 torch.Size([128, 512, 5, 5])
    output: 1 torch.Size([128, 512, 5, 5])
BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 512, 5, 5])
    output: 1 torch.Size([128, 512, 5, 5])
Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 2048, 5, 5])
    output: 1 torch.Size([128, 512, 5, 5])
ReLU()
    input: 1 torch.Size([128, 2048, 5, 5])
    output: 1 torch.Size([128, 2048, 5, 5])
BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 2048, 5, 5])
    output: 1 torch.Size([128, 2048, 5, 5])
Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 2048, 5, 5])
BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 2048, 5, 5])
    output: 1 torch.Size([128, 2048, 5, 5])
Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 512, 5, 5])
    output: 1 torch.Size([128, 2048, 5, 5])
ReLU()
    input: 1 torch.Size([128, 512, 5, 5])
    output: 1 torch.Size([128, 512, 5, 5])
BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 512, 5, 5])
    output: 1 torch.Size([128, 512, 5, 5])
Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    input: 1 torch.Size([128, 512, 10, 10])
    output: 1 torch.Size([128, 512, 5, 5])
ReLU()
    input: 1 torch.Size([128, 512, 10, 10])
    output: 1 torch.Size([128, 512, 10, 10])
BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 512, 10, 10])
    output: 1 torch.Size([128, 512, 10, 10])
Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 512, 10, 10])
ReLU()
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
ReLU()
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
ReLU()
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
ReLU()
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
ReLU()
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
ReLU()
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
ReLU()
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
ReLU()
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
ReLU()
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
ReLU()
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
ReLU()
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
ReLU()
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
ReLU()
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
ReLU()
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
ReLU()
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
ReLU()
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
    input: 1 torch.Size([128, 512, 20, 20])
    output: 1 torch.Size([128, 1024, 10, 10])
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 1024, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 1024, 10, 10])
ReLU()
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 256, 10, 10])
    output: 1 torch.Size([128, 256, 10, 10])
Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    input: 1 torch.Size([128, 256, 20, 20])
    output: 1 torch.Size([128, 256, 10, 10])
ReLU()
    input: 1 torch.Size([128, 256, 20, 20])
    output: 1 torch.Size([128, 256, 20, 20])
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 256, 20, 20])
    output: 1 torch.Size([128, 256, 20, 20])
Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 512, 20, 20])
    output: 1 torch.Size([128, 256, 20, 20])
ReLU()
    input: 1 torch.Size([128, 512, 20, 20])
    output: 1 torch.Size([128, 512, 20, 20])
BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 512, 20, 20])
    output: 1 torch.Size([128, 512, 20, 20])
Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 512, 20, 20])
ReLU()
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
ReLU()
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 512, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
ReLU()
    input: 1 torch.Size([128, 512, 20, 20])
    output: 1 torch.Size([128, 512, 20, 20])
BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 512, 20, 20])
    output: 1 torch.Size([128, 512, 20, 20])
Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 512, 20, 20])
ReLU()
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
ReLU()
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 512, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
ReLU()
    input: 1 torch.Size([128, 512, 20, 20])
    output: 1 torch.Size([128, 512, 20, 20])
BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 512, 20, 20])
    output: 1 torch.Size([128, 512, 20, 20])
Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 512, 20, 20])
ReLU()
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
ReLU()
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 512, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
ReLU()
    input: 1 torch.Size([128, 512, 20, 20])
    output: 1 torch.Size([128, 512, 20, 20])
BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 512, 20, 20])
    output: 1 torch.Size([128, 512, 20, 20])
Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
    input: 1 torch.Size([128, 256, 40, 40])
    output: 1 torch.Size([128, 512, 20, 20])
BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 512, 20, 20])
    output: 1 torch.Size([128, 512, 20, 20])
Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 512, 20, 20])
ReLU()
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 128, 20, 20])
    output: 1 torch.Size([128, 128, 20, 20])
Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    input: 1 torch.Size([128, 128, 40, 40])
    output: 1 torch.Size([128, 128, 20, 20])
ReLU()
    input: 1 torch.Size([128, 128, 40, 40])
    output: 1 torch.Size([128, 128, 40, 40])
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 128, 40, 40])
    output: 1 torch.Size([128, 128, 40, 40])
Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 256, 40, 40])
    output: 1 torch.Size([128, 128, 40, 40])
ReLU()
    input: 1 torch.Size([128, 256, 40, 40])
    output: 1 torch.Size([128, 256, 40, 40])
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 256, 40, 40])
    output: 1 torch.Size([128, 256, 40, 40])
Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 256, 40, 40])
ReLU()
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 64, 40, 40])
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 64, 40, 40])
Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 64, 40, 40])
ReLU()
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 64, 40, 40])
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 64, 40, 40])
Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 256, 40, 40])
    output: 1 torch.Size([128, 64, 40, 40])
ReLU()
    input: 1 torch.Size([128, 256, 40, 40])
    output: 1 torch.Size([128, 256, 40, 40])
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 256, 40, 40])
    output: 1 torch.Size([128, 256, 40, 40])
Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 256, 40, 40])
ReLU()
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 64, 40, 40])
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 64, 40, 40])
Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 64, 40, 40])
ReLU()
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 64, 40, 40])
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 64, 40, 40])
Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 256, 40, 40])
    output: 1 torch.Size([128, 64, 40, 40])
ReLU()
    input: 1 torch.Size([128, 256, 40, 40])
    output: 1 torch.Size([128, 256, 40, 40])
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 256, 40, 40])
    output: 1 torch.Size([128, 256, 40, 40])
Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 256, 40, 40])
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 256, 40, 40])
    output: 1 torch.Size([128, 256, 40, 40])
Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 256, 40, 40])
ReLU()
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 64, 40, 40])
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 64, 40, 40])
Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 64, 40, 40])
ReLU()
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 64, 40, 40])
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 64, 40, 40])
Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    input: 1 torch.Size([128, 64, 40, 40])
    output: 1 torch.Size([128, 64, 40, 40])
MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    input: 1 torch.Size([128, 64, 80, 80])
    output: 1 torch.Size([128, 64, 40, 40])
ReLU()
    input: 1 torch.Size([128, 64, 80, 80])
    output: 1 torch.Size([128, 64, 80, 80])
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    input: 1 torch.Size([128, 64, 80, 80])
    output: 1 torch.Size([128, 64, 80, 80])
Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
Traceback (most recent call last):
  File "train.py", line 920, in <module>
    main()
  File "train.py", line 666, in main
    train_metrics = train_one_epoch(
  File "train.py", line 768, in train_one_epoch
    loss.backward(create_graph=second_order)
  File "/opt/conda/lib/python3.8/site-packages/torch/_tensor.py", line 264, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/opt/conda/lib/python3.8/site-packages/torch/autograd/__init__.py", line 153, in backward
    Variable._execution_engine.run_backward(
  File "/opt/conda/lib/python3.8/site-packages/torch/utils/hooks.py", line 175, in hook
    res = user_hook(self.module, grad_inputs, self.grad_outputs)
  File "/workspace/wyt_workspace/pytorch-image-models/timm/utils/castTF32.py", line 28, in backward_hook
    print('    input:', len(grad_input), grad_input[0].shape)
AttributeError: 'NoneType' object has no attribute 'shape'
