ooo0  <class 'timm.models.resnet.ResNet'> ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act1): ReLU()
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act1): ReLU()
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU()
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act3): ReLU()
      (downsample): Sequential(
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act1): ReLU()
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU()
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act3): ReLU()
    )
    (2): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act1): ReLU()
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU()
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act3): ReLU()
    )
  )
  (layer2): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act1): ReLU()
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU()
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act3): ReLU()
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act1): ReLU()
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU()
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act3): ReLU()
    )
    (2): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act1): ReLU()
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU()
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act3): ReLU()
    )
    (3): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act1): ReLU()
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU()
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act3): ReLU()
    )
  )
  (layer3): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act1): ReLU()
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU()
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act3): ReLU()
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act1): ReLU()
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU()
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act3): ReLU()
    )
    (2): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act1): ReLU()
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU()
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act3): ReLU()
    )
    (3): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act1): ReLU()
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU()
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act3): ReLU()
    )
    (4): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act1): ReLU()
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU()
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act3): ReLU()
    )
    (5): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act1): ReLU()
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU()
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act3): ReLU()
    )
  )
  (layer4): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act1): ReLU()
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU()
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act3): ReLU()
      (downsample): Sequential(
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act1): ReLU()
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU()
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act3): ReLU()
    )
    (2): Bottleneck(
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act1): ReLU()
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU()
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act3): ReLU()
    )
  )
  (global_pool): SelectAdaptivePool2d (pool_type=avg, flatten=Flatten(start_dim=1, end_dim=-1))
  (fc): Linear(in_features=2048, out_features=1000, bias=True)
)
###1 conv1 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
###2 bn1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###3 act1 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###4 maxpool <class 'torch.nn.modules.pooling.MaxPool2d'> MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
ooo5 layer1 <class 'torch.nn.modules.container.Sequential'> Sequential(
  (0): Bottleneck(
    (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act1): ReLU()
    (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act2): ReLU()
    (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act3): ReLU()
    (downsample): Sequential(
      (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (1): Bottleneck(
    (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act1): ReLU()
    (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act2): ReLU()
    (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act3): ReLU()
  )
  (2): Bottleneck(
    (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act1): ReLU()
    (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act2): ReLU()
    (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act3): ReLU()
  )
)
ooo6 layer1.0 <class 'timm.models.resnet.Bottleneck'> Bottleneck(
  (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act1): ReLU()
  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act2): ReLU()
  (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act3): ReLU()
  (downsample): Sequential(
    (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
###7 layer1.0.conv1 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
###8 layer1.0.bn1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###9 layer1.0.act1 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###10 layer1.0.conv2 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
###11 layer1.0.bn2 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###12 layer1.0.act2 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###13 layer1.0.conv3 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
###14 layer1.0.bn3 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###15 layer1.0.act3 <class 'torch.nn.modules.activation.ReLU'> ReLU()
ooo16 layer1.0.downsample <class 'torch.nn.modules.container.Sequential'> Sequential(
  (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
###17 layer1.0.downsample.0 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
###18 layer1.0.downsample.1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
ooo19 layer1.1 <class 'timm.models.resnet.Bottleneck'> Bottleneck(
  (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act1): ReLU()
  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act2): ReLU()
  (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act3): ReLU()
)
###20 layer1.1.conv1 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
###21 layer1.1.bn1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###22 layer1.1.act1 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###23 layer1.1.conv2 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
###24 layer1.1.bn2 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###25 layer1.1.act2 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###26 layer1.1.conv3 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
###27 layer1.1.bn3 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###28 layer1.1.act3 <class 'torch.nn.modules.activation.ReLU'> ReLU()
ooo29 layer1.2 <class 'timm.models.resnet.Bottleneck'> Bottleneck(
  (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act1): ReLU()
  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act2): ReLU()
  (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act3): ReLU()
)
###30 layer1.2.conv1 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
###31 layer1.2.bn1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###32 layer1.2.act1 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###33 layer1.2.conv2 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
###34 layer1.2.bn2 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###35 layer1.2.act2 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###36 layer1.2.conv3 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
###37 layer1.2.bn3 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###38 layer1.2.act3 <class 'torch.nn.modules.activation.ReLU'> ReLU()
ooo39 layer2 <class 'torch.nn.modules.container.Sequential'> Sequential(
  (0): Bottleneck(
    (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act1): ReLU()
    (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act2): ReLU()
    (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act3): ReLU()
    (downsample): Sequential(
      (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (1): Bottleneck(
    (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act1): ReLU()
    (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act2): ReLU()
    (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act3): ReLU()
  )
  (2): Bottleneck(
    (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act1): ReLU()
    (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act2): ReLU()
    (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act3): ReLU()
  )
  (3): Bottleneck(
    (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act1): ReLU()
    (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act2): ReLU()
    (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act3): ReLU()
  )
)
ooo40 layer2.0 <class 'timm.models.resnet.Bottleneck'> Bottleneck(
  (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act1): ReLU()
  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act2): ReLU()
  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act3): ReLU()
  (downsample): Sequential(
    (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
    (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
###41 layer2.0.conv1 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
###42 layer2.0.bn1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###43 layer2.0.act1 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###44 layer2.0.conv2 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
###45 layer2.0.bn2 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###46 layer2.0.act2 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###47 layer2.0.conv3 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
###48 layer2.0.bn3 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###49 layer2.0.act3 <class 'torch.nn.modules.activation.ReLU'> ReLU()
ooo50 layer2.0.downsample <class 'torch.nn.modules.container.Sequential'> Sequential(
  (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
###51 layer2.0.downsample.0 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
###52 layer2.0.downsample.1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
ooo53 layer2.1 <class 'timm.models.resnet.Bottleneck'> Bottleneck(
  (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act1): ReLU()
  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act2): ReLU()
  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act3): ReLU()
)
###54 layer2.1.conv1 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
###55 layer2.1.bn1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###56 layer2.1.act1 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###57 layer2.1.conv2 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
###58 layer2.1.bn2 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###59 layer2.1.act2 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###60 layer2.1.conv3 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
###61 layer2.1.bn3 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###62 layer2.1.act3 <class 'torch.nn.modules.activation.ReLU'> ReLU()
ooo63 layer2.2 <class 'timm.models.resnet.Bottleneck'> Bottleneck(
  (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act1): ReLU()
  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act2): ReLU()
  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act3): ReLU()
)
###64 layer2.2.conv1 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
###65 layer2.2.bn1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###66 layer2.2.act1 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###67 layer2.2.conv2 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
###68 layer2.2.bn2 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###69 layer2.2.act2 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###70 layer2.2.conv3 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
###71 layer2.2.bn3 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###72 layer2.2.act3 <class 'torch.nn.modules.activation.ReLU'> ReLU()
ooo73 layer2.3 <class 'timm.models.resnet.Bottleneck'> Bottleneck(
  (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act1): ReLU()
  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act2): ReLU()
  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act3): ReLU()
)
###74 layer2.3.conv1 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
###75 layer2.3.bn1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###76 layer2.3.act1 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###77 layer2.3.conv2 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
###78 layer2.3.bn2 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###79 layer2.3.act2 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###80 layer2.3.conv3 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
###81 layer2.3.bn3 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###82 layer2.3.act3 <class 'torch.nn.modules.activation.ReLU'> ReLU()
ooo83 layer3 <class 'torch.nn.modules.container.Sequential'> Sequential(
  (0): Bottleneck(
    (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act1): ReLU()
    (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act2): ReLU()
    (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act3): ReLU()
    (downsample): Sequential(
      (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (1): Bottleneck(
    (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act1): ReLU()
    (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act2): ReLU()
    (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act3): ReLU()
  )
  (2): Bottleneck(
    (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act1): ReLU()
    (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act2): ReLU()
    (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act3): ReLU()
  )
  (3): Bottleneck(
    (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act1): ReLU()
    (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act2): ReLU()
    (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act3): ReLU()
  )
  (4): Bottleneck(
    (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act1): ReLU()
    (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act2): ReLU()
    (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act3): ReLU()
  )
  (5): Bottleneck(
    (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act1): ReLU()
    (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act2): ReLU()
    (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act3): ReLU()
  )
)
ooo84 layer3.0 <class 'timm.models.resnet.Bottleneck'> Bottleneck(
  (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act1): ReLU()
  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act2): ReLU()
  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act3): ReLU()
  (downsample): Sequential(
    (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
    (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
###85 layer3.0.conv1 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
###86 layer3.0.bn1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###87 layer3.0.act1 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###88 layer3.0.conv2 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
###89 layer3.0.bn2 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###90 layer3.0.act2 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###91 layer3.0.conv3 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
###92 layer3.0.bn3 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###93 layer3.0.act3 <class 'torch.nn.modules.activation.ReLU'> ReLU()
ooo94 layer3.0.downsample <class 'torch.nn.modules.container.Sequential'> Sequential(
  (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
###95 layer3.0.downsample.0 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
###96 layer3.0.downsample.1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
ooo97 layer3.1 <class 'timm.models.resnet.Bottleneck'> Bottleneck(
  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act1): ReLU()
  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act2): ReLU()
  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act3): ReLU()
)
###98 layer3.1.conv1 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
###99 layer3.1.bn1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###100 layer3.1.act1 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###101 layer3.1.conv2 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
###102 layer3.1.bn2 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###103 layer3.1.act2 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###104 layer3.1.conv3 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
###105 layer3.1.bn3 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###106 layer3.1.act3 <class 'torch.nn.modules.activation.ReLU'> ReLU()
ooo107 layer3.2 <class 'timm.models.resnet.Bottleneck'> Bottleneck(
  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act1): ReLU()
  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act2): ReLU()
  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act3): ReLU()
)
###108 layer3.2.conv1 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
###109 layer3.2.bn1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###110 layer3.2.act1 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###111 layer3.2.conv2 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
###112 layer3.2.bn2 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###113 layer3.2.act2 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###114 layer3.2.conv3 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
###115 layer3.2.bn3 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###116 layer3.2.act3 <class 'torch.nn.modules.activation.ReLU'> ReLU()
ooo117 layer3.3 <class 'timm.models.resnet.Bottleneck'> Bottleneck(
  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act1): ReLU()
  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act2): ReLU()
  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act3): ReLU()
)
###118 layer3.3.conv1 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
###119 layer3.3.bn1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###120 layer3.3.act1 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###121 layer3.3.conv2 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
###122 layer3.3.bn2 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###123 layer3.3.act2 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###124 layer3.3.conv3 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
###125 layer3.3.bn3 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###126 layer3.3.act3 <class 'torch.nn.modules.activation.ReLU'> ReLU()
ooo127 layer3.4 <class 'timm.models.resnet.Bottleneck'> Bottleneck(
  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act1): ReLU()
  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act2): ReLU()
  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act3): ReLU()
)
###128 layer3.4.conv1 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
###129 layer3.4.bn1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###130 layer3.4.act1 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###131 layer3.4.conv2 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
###132 layer3.4.bn2 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###133 layer3.4.act2 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###134 layer3.4.conv3 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
###135 layer3.4.bn3 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###136 layer3.4.act3 <class 'torch.nn.modules.activation.ReLU'> ReLU()
ooo137 layer3.5 <class 'timm.models.resnet.Bottleneck'> Bottleneck(
  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act1): ReLU()
  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act2): ReLU()
  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act3): ReLU()
)
###138 layer3.5.conv1 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
###139 layer3.5.bn1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###140 layer3.5.act1 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###141 layer3.5.conv2 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
###142 layer3.5.bn2 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###143 layer3.5.act2 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###144 layer3.5.conv3 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
###145 layer3.5.bn3 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###146 layer3.5.act3 <class 'torch.nn.modules.activation.ReLU'> ReLU()
ooo147 layer4 <class 'torch.nn.modules.container.Sequential'> Sequential(
  (0): Bottleneck(
    (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act1): ReLU()
    (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act2): ReLU()
    (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act3): ReLU()
    (downsample): Sequential(
      (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (1): Bottleneck(
    (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act1): ReLU()
    (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act2): ReLU()
    (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act3): ReLU()
  )
  (2): Bottleneck(
    (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act1): ReLU()
    (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act2): ReLU()
    (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act3): ReLU()
  )
)
ooo148 layer4.0 <class 'timm.models.resnet.Bottleneck'> Bottleneck(
  (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act1): ReLU()
  (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act2): ReLU()
  (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act3): ReLU()
  (downsample): Sequential(
    (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
    (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
###149 layer4.0.conv1 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
###150 layer4.0.bn1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###151 layer4.0.act1 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###152 layer4.0.conv2 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
###153 layer4.0.bn2 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###154 layer4.0.act2 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###155 layer4.0.conv3 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
###156 layer4.0.bn3 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###157 layer4.0.act3 <class 'torch.nn.modules.activation.ReLU'> ReLU()
ooo158 layer4.0.downsample <class 'torch.nn.modules.container.Sequential'> Sequential(
  (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
###159 layer4.0.downsample.0 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
###160 layer4.0.downsample.1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
ooo161 layer4.1 <class 'timm.models.resnet.Bottleneck'> Bottleneck(
  (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act1): ReLU()
  (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act2): ReLU()
  (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act3): ReLU()
)
###162 layer4.1.conv1 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
###163 layer4.1.bn1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###164 layer4.1.act1 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###165 layer4.1.conv2 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
###166 layer4.1.bn2 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###167 layer4.1.act2 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###168 layer4.1.conv3 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
###169 layer4.1.bn3 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###170 layer4.1.act3 <class 'torch.nn.modules.activation.ReLU'> ReLU()
ooo171 layer4.2 <class 'timm.models.resnet.Bottleneck'> Bottleneck(
  (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act1): ReLU()
  (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act2): ReLU()
  (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act3): ReLU()
)
###172 layer4.2.conv1 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
###173 layer4.2.bn1 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###174 layer4.2.act1 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###175 layer4.2.conv2 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
###176 layer4.2.bn2 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###177 layer4.2.act2 <class 'torch.nn.modules.activation.ReLU'> ReLU()
###178 layer4.2.conv3 <class 'torch.nn.modules.conv.Conv2d'> Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
###179 layer4.2.bn3 <class 'torch.nn.modules.batchnorm.BatchNorm2d'> BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
###180 layer4.2.act3 <class 'torch.nn.modules.activation.ReLU'> ReLU()
ooo181 global_pool <class 'timm.models.layers.adaptive_avgmax_pool.SelectAdaptivePool2d'> SelectAdaptivePool2d (pool_type=avg, flatten=Flatten(start_dim=1, end_dim=-1))
ooo182 global_pool.flatten <class 'torch.nn.modules.flatten.Flatten'> Flatten(start_dim=1, end_dim=-1)
###183 global_pool.pool <class 'torch.nn.modules.pooling.AdaptiveAvgPool2d'> AdaptiveAvgPool2d(output_size=1)
###184 fc <class 'torch.nn.modules.linear.Linear'> Linear(in_features=2048, out_features=1000, bias=True)
